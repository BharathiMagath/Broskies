# Java Collections and Comparator - Employee Sorting

## ðŸ“Œ Objective
This project demonstrates how to use **Java Collections** and implement sorting with **Comparator**.  
It also covers important **interview questions** related to Collections, Comparator, and sorting.

---

## ðŸ›  Tools Required
- Java (JDK 8 or above)
- IDE (Eclipse, IntelliJ, or VS Code)

---

## ðŸ“š Key Concepts
- `ArrayList` for storing multiple objects
- `Comparator` interface for custom sorting
- `Collections.sort()` for ordering lists
- Lambda expressions for concise comparators
- Multiple field sorting with `thenComparing`

---

## ðŸš€ Steps Implemented
1. Create `Employee` class with `name`, `age`, and `salary`.
2. Add constructor and `toString()` for easy display.
3. Store multiple employees in an `ArrayList`.
4. Use `Collections.sort()` with `Comparator` for sorting by salary (descending).
5. Sort employees by name (ascending) using another comparator.
6. Print sorted lists.

---

## ðŸ“‚ Project Structure
